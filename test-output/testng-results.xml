<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="6" ignored="6" total="28" passed="14" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-05T13:15:20 IST" name="CrossBrowserTestSuite" finished-at="2025-08-05T13:16:54 IST" duration-ms="93697">
    <groups>
      <group name="group2">
        <method signature="LoginTest.verify_the_RememberMe_checkbox_is_unchecked_by_default()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" name="verify_the_RememberMe_checkbox_is_unchecked_by_default" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" name="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_the_RememberMe_checkbox_is_unchecked_by_default()[pri:0, instance:testClasses.LoginTest@c667f46]" name="verify_the_RememberMe_checkbox_is_unchecked_by_default" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password()[pri:0, instance:testClasses.LoginTest@c667f46]" name="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password" class="testClasses.LoginTest"/>
      </group> <!-- group2 -->
      <group name="group1">
        <method signature="LoginTest.verify_Correct_Application_Is_Launching_While_Hitting_The_URL()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" name="verify_Correct_Application_Is_Launching_While_Hitting_The_URL" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_UserNameTextBox_Showing_Hint_or_not()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" name="verify_UserNameTextBox_Showing_Hint_or_not" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_Correct_Application_Is_Launching_While_Hitting_The_URL()[pri:0, instance:testClasses.LoginTest@c667f46]" name="verify_Correct_Application_Is_Launching_While_Hitting_The_URL" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_UserNameTextBox_Showing_Hint_or_not()[pri:0, instance:testClasses.LoginTest@c667f46]" name="verify_UserNameTextBox_Showing_Hint_or_not" class="testClasses.LoginTest"/>
      </group> <!-- group1 -->
    </groups>
    <test started-at="2025-08-05T13:15:20 IST" name="ChromeTest" finished-at="2025-08-05T13:15:50 IST" duration-ms="30095">
      <class name="testClasses.LoginTest">
        <test-method is-config="true" signature="dbConnection()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:20 IST" name="dbConnection" finished-at="2025-08-05T13:15:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbConnection -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:20 IST" name="beforeMethod" finished-at="2025-08-05T13:15:22 IST" duration-ms="2103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_Correct_Application_Is_Launching_While_Hitting_The_URL()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:22 IST" name="verify_Correct_Application_Is_Launching_While_Hitting_The_URL" finished-at="2025-08-05T13:15:22 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_Correct_Application_Is_Launching_While_Hitting_The_URL -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:22 IST" name="afterMethod" finished-at="2025-08-05T13:15:22 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:22 IST" name="beforeMethod" finished-at="2025-08-05T13:15:24 IST" duration-ms="1146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_UserNameTextBox_Showing_Hint_or_not()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:24 IST" name="verify_UserNameTextBox_Showing_Hint_or_not" finished-at="2025-08-05T13:15:24 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_UserNameTextBox_Showing_Hint_or_not -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:24 IST" name="afterMethod" finished-at="2025-08-05T13:15:24 IST" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:24 IST" name="beforeMethod" finished-at="2025-08-05T13:15:25 IST" duration-ms="1141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:25 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:15:26 IST" duration-ms="635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:26 IST" name="afterMethod" finished-at="2025-08-05T13:15:26 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:26 IST" name="beforeMethod" finished-at="2025-08-05T13:15:27 IST" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:27 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:15:28 IST" duration-ms="634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[809897]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:28 IST" name="afterMethod" finished-at="2025-08-05T13:15:28 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:28 IST" name="beforeMethod" finished-at="2025-08-05T13:15:29 IST" duration-ms="1001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:29 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:15:30 IST" duration-ms="656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:30 IST" name="afterMethod" finished-at="2025-08-05T13:15:30 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:30 IST" name="beforeMethod" finished-at="2025-08-05T13:15:31 IST" duration-ms="1174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_RememberMe_checkbox_is_unchecked_by_default()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:31 IST" name="verify_the_RememberMe_checkbox_is_unchecked_by_default" finished-at="2025-08-05T13:15:31 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_RememberMe_checkbox_is_unchecked_by_default -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:31 IST" name="afterMethod" finished-at="2025-08-05T13:15:31 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:31 IST" name="beforeMethod" finished-at="2025-08-05T13:15:32 IST" duration-ms="1099" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:32 IST" name="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password" finished-at="2025-08-05T13:15:32 IST" duration-ms="416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:32 IST" name="afterMethod" finished-at="2025-08-05T13:15:32 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:33 IST" name="beforeMethod" finished-at="2025-08-05T13:15:34 IST" duration-ms="1132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:34 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:15:37 IST" duration-ms="3349" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:37 IST" name="afterMethod" finished-at="2025-08-05T13:15:37 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:37 IST" name="beforeMethod" finished-at="2025-08-05T13:15:38 IST" duration-ms="1088" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:38 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:15:41 IST" duration-ms="3262" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:41 IST" name="afterMethod" finished-at="2025-08-05T13:15:42 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:42 IST" name="beforeMethod" finished-at="2025-08-05T13:15:43 IST" duration-ms="1103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:43 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:15:46 IST" duration-ms="3080" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:46 IST" name="afterMethod" finished-at="2025-08-05T13:15:46 IST" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:46 IST" name="beforeMethod" finished-at="2025-08-05T13:15:47 IST" duration-ms="1018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:47 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:15:50 IST" duration-ms="3260" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:50 IST" name="afterMethod" finished-at="2025-08-05T13:15:50 IST" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="dbterminate()[pri:0, instance:testClasses.LoginTest@1a5b6f42]" started-at="2025-08-05T13:15:50 IST" name="dbterminate" finished-at="2025-08-05T13:15:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbterminate -->
      </class> <!-- testClasses.LoginTest -->
    </test> <!-- ChromeTest -->
    <test started-at="2025-08-05T13:15:51 IST" name="FirefoxTest" finished-at="2025-08-05T13:16:54 IST" duration-ms="63344">
      <class name="testClasses.LoginTest">
        <test-method is-config="true" signature="environmentVerify()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:20 IST" name="environmentVerify" finished-at="2025-08-05T13:15:20 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environmentVerify -->
        <test-method is-config="true" signature="dbConnection()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:51 IST" name="dbConnection" finished-at="2025-08-05T13:15:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbConnection -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:51 IST" name="beforeMethod" finished-at="2025-08-05T13:15:54 IST" duration-ms="3011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_Correct_Application_Is_Launching_While_Hitting_The_URL()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:54 IST" name="verify_Correct_Application_Is_Launching_While_Hitting_The_URL" finished-at="2025-08-05T13:15:54 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_Correct_Application_Is_Launching_While_Hitting_The_URL -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:54 IST" name="afterMethod" finished-at="2025-08-05T13:15:54 IST" duration-ms="841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:54 IST" name="beforeMethod" finished-at="2025-08-05T13:15:57 IST" duration-ms="2983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_UserNameTextBox_Showing_Hint_or_not()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:57 IST" name="verify_UserNameTextBox_Showing_Hint_or_not" finished-at="2025-08-05T13:15:57 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_UserNameTextBox_Showing_Hint_or_not -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:57 IST" name="afterMethod" finished-at="2025-08-05T13:15:58 IST" duration-ms="830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:15:58 IST" name="beforeMethod" finished-at="2025-08-05T13:16:01 IST" duration-ms="2793" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:01 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:16:02 IST" duration-ms="770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:02 IST" name="afterMethod" finished-at="2025-08-05T13:16:03 IST" duration-ms="801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:03 IST" name="beforeMethod" finished-at="2025-08-05T13:16:06 IST" duration-ms="3074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:06 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:16:07 IST" duration-ms="1001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[809897]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:07 IST" name="afterMethod" finished-at="2025-08-05T13:16:07 IST" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:07 IST" name="beforeMethod" finished-at="2025-08-05T13:16:11 IST" duration-ms="3205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:11 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:16:11 IST" duration-ms="747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:11 IST" name="afterMethod" finished-at="2025-08-05T13:16:12 IST" duration-ms="803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:12 IST" name="beforeMethod" finished-at="2025-08-05T13:16:15 IST" duration-ms="2846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_RememberMe_checkbox_is_unchecked_by_default()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:15 IST" name="verify_the_RememberMe_checkbox_is_unchecked_by_default" finished-at="2025-08-05T13:16:15 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_RememberMe_checkbox_is_unchecked_by_default -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:15 IST" name="afterMethod" finished-at="2025-08-05T13:16:16 IST" duration-ms="833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:16 IST" name="beforeMethod" finished-at="2025-08-05T13:16:19 IST" duration-ms="2960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:19 IST" name="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password" finished-at="2025-08-05T13:16:20 IST" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:20 IST" name="afterMethod" finished-at="2025-08-05T13:16:20 IST" duration-ms="807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:20 IST" name="beforeMethod" finished-at="2025-08-05T13:16:23 IST" duration-ms="3000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:23 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:16:28 IST" duration-ms="4654" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:28 IST" name="afterMethod" finished-at="2025-08-05T13:16:29 IST" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:29 IST" name="beforeMethod" finished-at="2025-08-05T13:16:32 IST" duration-ms="2908" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:32 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:16:36 IST" duration-ms="4393" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:36 IST" name="afterMethod" finished-at="2025-08-05T13:16:37 IST" duration-ms="862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:37 IST" name="beforeMethod" finished-at="2025-08-05T13:16:40 IST" duration-ms="2905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:40 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:16:44 IST" duration-ms="4550" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:44 IST" name="afterMethod" finished-at="2025-08-05T13:16:45 IST" duration-ms="823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:45 IST" name="beforeMethod" finished-at="2025-08-05T13:16:48 IST" duration-ms="2964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:48 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:16:53 IST" duration-ms="4729" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:53 IST" name="afterMethod" finished-at="2025-08-05T13:16:54 IST" duration-ms="825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="dbterminate()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:54 IST" name="dbterminate" finished-at="2025-08-05T13:16:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbterminate -->
        <test-method is-config="true" signature="environmentClose()[pri:0, instance:testClasses.LoginTest@c667f46]" started-at="2025-08-05T13:16:54 IST" name="environmentClose" finished-at="2025-08-05T13:16:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environmentClose -->
      </class> <!-- testClasses.LoginTest -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- CrossBrowserTestSuite -->
</testng-results>
