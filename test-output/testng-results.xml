<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="6" ignored="6" total="28" passed="14" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-05T13:02:32 IST" name="CrossBrowserTestSuite" finished-at="2025-08-05T13:04:20 IST" duration-ms="108254">
    <groups>
      <group name="group2">
        <method signature="LoginTest.verify_the_RememberMe_checkbox_is_unchecked_by_default()[pri:0, instance:testClasses.LoginTest@3e2055d6]" name="verify_the_RememberMe_checkbox_is_unchecked_by_default" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password()[pri:0, instance:testClasses.LoginTest@3e2055d6]" name="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_the_RememberMe_checkbox_is_unchecked_by_default()[pri:0, instance:testClasses.LoginTest@51bf5add]" name="verify_the_RememberMe_checkbox_is_unchecked_by_default" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password()[pri:0, instance:testClasses.LoginTest@51bf5add]" name="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password" class="testClasses.LoginTest"/>
      </group> <!-- group2 -->
      <group name="group1">
        <method signature="LoginTest.verify_Correct_Application_Is_Launching_While_Hitting_The_URL()[pri:0, instance:testClasses.LoginTest@3e2055d6]" name="verify_Correct_Application_Is_Launching_While_Hitting_The_URL" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_UserNameTextBox_Showing_Hint_or_not()[pri:0, instance:testClasses.LoginTest@3e2055d6]" name="verify_UserNameTextBox_Showing_Hint_or_not" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_Correct_Application_Is_Launching_While_Hitting_The_URL()[pri:0, instance:testClasses.LoginTest@51bf5add]" name="verify_Correct_Application_Is_Launching_While_Hitting_The_URL" class="testClasses.LoginTest"/>
        <method signature="LoginTest.verify_UserNameTextBox_Showing_Hint_or_not()[pri:0, instance:testClasses.LoginTest@51bf5add]" name="verify_UserNameTextBox_Showing_Hint_or_not" class="testClasses.LoginTest"/>
      </group> <!-- group1 -->
    </groups>
    <test started-at="2025-08-05T13:02:32 IST" name="ChromeTest" finished-at="2025-08-05T13:03:03 IST" duration-ms="31125">
      <class name="testClasses.LoginTest">
        <test-method is-config="true" signature="dbConnection()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:32 IST" name="dbConnection" finished-at="2025-08-05T13:02:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbConnection -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:32 IST" name="beforeMethod" finished-at="2025-08-05T13:02:34 IST" duration-ms="1606" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_Correct_Application_Is_Launching_While_Hitting_The_URL()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:34 IST" name="verify_Correct_Application_Is_Launching_While_Hitting_The_URL" finished-at="2025-08-05T13:02:34 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_Correct_Application_Is_Launching_While_Hitting_The_URL -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:34 IST" name="afterMethod" finished-at="2025-08-05T13:02:34 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:34 IST" name="beforeMethod" finished-at="2025-08-05T13:02:35 IST" duration-ms="1065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_UserNameTextBox_Showing_Hint_or_not()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:35 IST" name="verify_UserNameTextBox_Showing_Hint_or_not" finished-at="2025-08-05T13:02:35 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_UserNameTextBox_Showing_Hint_or_not -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:35 IST" name="afterMethod" finished-at="2025-08-05T13:02:35 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:36 IST" name="beforeMethod" finished-at="2025-08-05T13:02:37 IST" duration-ms="1163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:37 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:02:37 IST" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:37 IST" name="afterMethod" finished-at="2025-08-05T13:02:37 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:37 IST" name="beforeMethod" finished-at="2025-08-05T13:02:39 IST" duration-ms="1082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:39 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:02:39 IST" duration-ms="709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[809897]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:39 IST" name="afterMethod" finished-at="2025-08-05T13:02:39 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:39 IST" name="beforeMethod" finished-at="2025-08-05T13:02:40 IST" duration-ms="1093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:40 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:02:41 IST" duration-ms="698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:41 IST" name="afterMethod" finished-at="2025-08-05T13:02:41 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:41 IST" name="beforeMethod" finished-at="2025-08-05T13:02:42 IST" duration-ms="1144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_RememberMe_checkbox_is_unchecked_by_default()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:42 IST" name="verify_the_RememberMe_checkbox_is_unchecked_by_default" finished-at="2025-08-05T13:02:42 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_RememberMe_checkbox_is_unchecked_by_default -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:42 IST" name="afterMethod" finished-at="2025-08-05T13:02:42 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:42 IST" name="beforeMethod" finished-at="2025-08-05T13:02:44 IST" duration-ms="1151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:44 IST" name="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password" finished-at="2025-08-05T13:02:44 IST" duration-ms="430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:44 IST" name="afterMethod" finished-at="2025-08-05T13:02:44 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:44 IST" name="beforeMethod" finished-at="2025-08-05T13:02:45 IST" duration-ms="1116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:45 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:02:49 IST" duration-ms="3728" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:49 IST" name="afterMethod" finished-at="2025-08-05T13:02:49 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:49 IST" name="beforeMethod" finished-at="2025-08-05T13:02:50 IST" duration-ms="1192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:50 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:02:54 IST" duration-ms="3357" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:54 IST" name="afterMethod" finished-at="2025-08-05T13:02:54 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:54 IST" name="beforeMethod" finished-at="2025-08-05T13:02:55 IST" duration-ms="1098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:55 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:02:58 IST" duration-ms="3254" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:58 IST" name="afterMethod" finished-at="2025-08-05T13:02:58 IST" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:58 IST" name="beforeMethod" finished-at="2025-08-05T13:02:59 IST" duration-ms="1250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:02:59 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:03:03 IST" duration-ms="3426" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:03:03 IST" name="afterMethod" finished-at="2025-08-05T13:03:03 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="dbterminate()[pri:0, instance:testClasses.LoginTest@3e2055d6]" started-at="2025-08-05T13:03:03 IST" name="dbterminate" finished-at="2025-08-05T13:03:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbterminate -->
      </class> <!-- testClasses.LoginTest -->
    </test> <!-- ChromeTest -->
    <test started-at="2025-08-05T13:03:03 IST" name="FirefoxTest" finished-at="2025-08-05T13:04:20 IST" duration-ms="76869">
      <class name="testClasses.LoginTest">
        <test-method is-config="true" signature="environmentVerify()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:02:32 IST" name="environmentVerify" finished-at="2025-08-05T13:02:32 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environmentVerify -->
        <test-method is-config="true" signature="dbConnection()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:03 IST" name="dbConnection" finished-at="2025-08-05T13:03:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbConnection -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:03 IST" name="beforeMethod" finished-at="2025-08-05T13:03:07 IST" duration-ms="3852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_Correct_Application_Is_Launching_While_Hitting_The_URL()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:07 IST" name="verify_Correct_Application_Is_Launching_While_Hitting_The_URL" finished-at="2025-08-05T13:03:07 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_Correct_Application_Is_Launching_While_Hitting_The_URL -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:07 IST" name="afterMethod" finished-at="2025-08-05T13:03:08 IST" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:08 IST" name="beforeMethod" finished-at="2025-08-05T13:03:12 IST" duration-ms="3771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_UserNameTextBox_Showing_Hint_or_not()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:12 IST" name="verify_UserNameTextBox_Showing_Hint_or_not" finished-at="2025-08-05T13:03:12 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_UserNameTextBox_Showing_Hint_or_not -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:12 IST" name="afterMethod" finished-at="2025-08-05T13:03:13 IST" duration-ms="874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:13 IST" name="beforeMethod" finished-at="2025-08-05T13:03:17 IST" duration-ms="3679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:17 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:03:17 IST" duration-ms="854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:17 IST" name="afterMethod" finished-at="2025-08-05T13:03:18 IST" duration-ms="852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:18 IST" name="beforeMethod" finished-at="2025-08-05T13:03:22 IST" duration-ms="3809" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:22 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:03:23 IST" duration-ms="842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[809897]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:23 IST" name="afterMethod" finished-at="2025-08-05T13:03:24 IST" duration-ms="819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:24 IST" name="beforeMethod" finished-at="2025-08-05T13:03:28 IST" duration-ms="3775" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_invalid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:28 IST" name="verify_invalid_login" data-provider="unsuccessfulLogin" finished-at="2025-08-05T13:03:28 IST" duration-ms="863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_invalid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:28 IST" name="afterMethod" finished-at="2025-08-05T13:03:29 IST" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:29 IST" name="beforeMethod" finished-at="2025-08-05T13:03:33 IST" duration-ms="3931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_RememberMe_checkbox_is_unchecked_by_default()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:33 IST" name="verify_the_RememberMe_checkbox_is_unchecked_by_default" finished-at="2025-08-05T13:03:33 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_RememberMe_checkbox_is_unchecked_by_default -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:33 IST" name="afterMethod" finished-at="2025-08-05T13:03:34 IST" duration-ms="849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:34 IST" name="beforeMethod" finished-at="2025-08-05T13:03:38 IST" duration-ms="3737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:38 IST" name="verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password" finished-at="2025-08-05T13:03:38 IST" duration-ms="632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_the_reset_password_page_is_redirecting_while_clicking_on_Forgot_your_password -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:38 IST" name="afterMethod" finished-at="2025-08-05T13:03:39 IST" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:39 IST" name="beforeMethod" finished-at="2025-08-05T13:03:43 IST" duration-ms="3897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:43 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:03:48 IST" duration-ms="4647" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:48 IST" name="afterMethod" finished-at="2025-08-05T13:03:49 IST" duration-ms="884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:49 IST" name="beforeMethod" finished-at="2025-08-05T13:03:53 IST" duration-ms="4013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:53 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:03:58 IST" duration-ms="4778" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:58 IST" name="afterMethod" finished-at="2025-08-05T13:03:58 IST" duration-ms="862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:03:58 IST" name="beforeMethod" finished-at="2025-08-05T13:04:05 IST" duration-ms="6353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:04:05 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:04:10 IST" duration-ms="4844" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:04:10 IST" name="afterMethod" finished-at="2025-08-05T13:04:11 IST" duration-ms="939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:04:11 IST" name="beforeMethod" finished-at="2025-08-05T13:04:14 IST" duration-ms="3876" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verify_valid_login(java.lang.String,java.lang.String)[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:04:14 IST" name="verify_valid_login" data-provider="successfulLogin" finished-at="2025-08-05T13:04:19 IST" duration-ms="4790" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFRow.getCell(int)" because "r" is null
at utilities.ExcelReadUtility.getStringData(ExcelReadUtility.java:24)
at testClasses.LoginTest.verify_valid_login(LoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_valid_login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:04:19 IST" name="afterMethod" finished-at="2025-08-05T13:04:20 IST" duration-ms="874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="dbterminate()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:04:20 IST" name="dbterminate" finished-at="2025-08-05T13:04:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbterminate -->
        <test-method is-config="true" signature="environmentClose()[pri:0, instance:testClasses.LoginTest@51bf5add]" started-at="2025-08-05T13:04:20 IST" name="environmentClose" finished-at="2025-08-05T13:04:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- environmentClose -->
      </class> <!-- testClasses.LoginTest -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- CrossBrowserTestSuite -->
</testng-results>
